<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>engine-agent</artifactId>
    <parent>
        <groupId>com.sos-berlin.jobscheduler.engine</groupId>
        <artifactId>engine</artifactId>
        <version>1.11.0-RC2-SNAPSHOT</version>
    </parent>

    <name>${project.artifactId}</name>
    <inceptionYear>2014</inceptionYear>
    <description>JobScheduler Agent for JVM</description>
    <organization>
        <name>SOS Software GmbH, Berlin</name>
        <url>http://www.sos-berlin.com</url>
    </organization>
    <contributors>
        <contributor>
            <name>Joacim Zschimmer</name>
        </contributor>
    </contributors>

    <properties>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss.SSSZZ</maven.build.timestamp.format>
        <maven-build-timestamp>${maven.build.timestamp}</maven-build-timestamp>  <!-- http://jira.codehaus.org/browse/MRESOURCES-99 -->
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/maven.properties</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- For class MavenProperties. Provides ${buildNumber} with Git commit hash, and ${scmBranch} -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.sos-berlin.jobscheduler.engine</groupId>
            <artifactId>engine-agent-data</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sos-berlin.jobscheduler.engine</groupId>
            <artifactId>engine-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sos-berlin.jobscheduler.engine</groupId>
            <artifactId>engine-data</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sos-berlin.jobscheduler.engine</groupId>
            <artifactId>engine-tunnel</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sos-berlin.jobscheduler.engine</groupId>
            <artifactId>engine-taskserver</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>org.joda</groupId>
            <artifactId>joda-convert</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-xml_${scala.binaryVersion}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binaryVersion}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-json_${scala.binaryVersion}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_${scala.binaryVersion}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-slf4j_${scala.binaryVersion}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scalactic</groupId>
            <artifactId>scalactic_${scala.binaryVersion}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-can_${scala.binaryVersion}</artifactId>
        </dependency>
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-http_${scala.binaryVersion}</artifactId>
        </dependency>
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-servlet_${scala.binaryVersion}</artifactId>
        </dependency>
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-routing_${scala.binaryVersion}</artifactId>
        </dependency>
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-client_${scala.binaryVersion}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-testkit_${scala.binaryVersion}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>annotations</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
