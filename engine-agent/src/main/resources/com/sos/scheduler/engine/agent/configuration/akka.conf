akka {
  loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  log-dead-letters = 0
  scheduler.tick-duration = 1s   # Or 100ms - With default (10ms under Windows), we have 1% CPU usage when idling
  jvm-exit-on-fatal-error = false
}

spray {
  can {
    client {
      # The time period within which the TCP connecting process must be completed. Set to `infinite` to disable.
      connecting-timeout = 30s

      # The max time period that a client connection will be waiting for a response
      # before triggering a request timeout. The timer for this logic is not started
      # until the connection is actually in a state to receive the response, which
      # may be quite some time after the request has been received from the
      # application!
      # There are two main reasons to delay the start of the request timeout timer:
      # 1. On the host-level API with pipelining disabled:
      #    If the request cannot be sent immediately because all connections are
      #    currently busy with earlier requests it has to be queued until a
      #    connection becomes available.
      # 2. With pipelining enabled:
      #    The request timeout timer starts only once the response for the
      #    preceding request on the connection has arrived.
      # Set to `infinite` to completely disable request timeouts.
      request-timeout = 60s
    }
    host-connector {
      # The maximum number of times an `HttpHostConnector` attempts to repeat failed requests (if the request can be safely retried) before giving up and returning an error.
      max-retries = 0
    }
    server {
      # If a request hasn't been responded to after the time period set here
      # a `spray.http.Timedout` message will be sent to the timeout handler.
      # Set to `infinite` to completely disable request timeouts.
      request-timeout = infinite

      # The time after which an idle connection will be automatically closed.
      # Set to `infinite` to completely disable idle connection timeouts.
      # Spray 1.3.3: idle-timeout must be > request-timeout (if the latter is not 'infinite')
      # idle-timeout = 60s

      # Enables/disables the addition of a `Remote-Address` header
      # holding the clients (remote) IP address.
      remote-address-header = on
    }
  }
}
