#!/usr/bin/env bash
set -euo pipefail
# -----------------------------------------------------------------------------
# Prepare your local git directory yourself like this:
#   git checkout release/2.0
#   git pull --ff-only
# -----------------------------------------------------------------------------

#cd "${0%/*}/../js7-controller/.."
# Must be a js7 directory
cd js7-controller/..

if [ ${BASH_VERSINFO[0]} -lt 5 ]; then
  # Before version 4.4, bash does handle empty arrays with -u
  set +u
fi

gitPush=false
sbtDefines=()
pushOptions=()

function usage() {
  echo "Usage: $0 --merge=<version> --as=<version> --next-snapshot=<version>"
  echo "--release to commit a release version (simply strips -SNAPSHOT)"
  echo "Without --release, a pre-release version is committed"
  echo "Example: $0 --release"
}

for arg in "$@"; do :
  case "$arg" in
    --release)
      sbtDefines+=(-Djs7.release)
      ;;
    --push)
      gitPush=true
      ;;
    -\?|-h|--help)
      usage
      exit 0
      ;;
    *)
      echo "Invalid option: $arg"
      usage
      exit 1
      ;;
  esac
done
if [ $gitPush != true ]; then
  # Check only
  pushOptions+=("--dry-run")
fi

# We skip-tests because the commit should already have been tested.
# Don't forget to build and test the released version!
./sbt-batch "${sbtDefines[@]}" --warn 'release with-defaults skip-tests'

git push "${pushOptions[@]}" --follow-tags
if [ $gitPush != true ]; then
  echo
  echo "Give the following command to publish the commits:"
  echo "git push --follow-tags"
fi
