jobscheduler.configuration.trusted-signature-keys {
  # Each used object configuration signature implementation has an entry here
  # with the file containing the trusted public keys.
  # PGP = ${jobscheduler.config-directory}"/private/trusted-pgp-keys"
}

jobscheduler.master {
  id = Master

  agent-driver {
    # Duration the Master collects and buffers events for efficient handling of multiple events
    event-buffer-delay = 100ms

    # Limit the number of event the Master buffers.
    # OrderStdWritten may be up to 10000 characters (30000 UTF-8 characters),
    # so for 1000 events, memory usage can reach 30MB.
    # (1 for AgentEventIdEvent is added to the number)
    event-buffer-size = 999

    # Limit number of commands per HTTP POST
    # A command may contain a complete order including its variables
    command-batch-size = 100

    # Delay first command to have an opportunity to collect more commands in a single HTTP POST
    command-batch-delay = 50ms

    # After a sending a command batch failed, delay further commands
    # The master sends a command batch repeatedly until the Agent accepts it.
    command-error-delay = 5s

    # Maximum number of parallel HTTP requests for sending command batches to the Agent
    command-parallelism = 2

    # How often a ReleaseEvents command is sent to the Agent to delete obsolete journal files
    release-events-period = 1 minute
  }
}

jobscheduler.auth.users {
  # Place your own users in file secret private/private.conf, using the following pattern:
  #  NAME = "sha256:PASSWORD" or "plain:PASSWORD"
}

jobscheduler.auth.session {
  timeout = 1 hour
}

jobscheduler.log {
  file = ${jobscheduler.data-directory}"/logs/master.log"
}

jobscheduler.web.client {
  # Maximum duration of a polling HTTP GET without traffic, to prevent any connection timeout
  idle-get-timeout = 55s

  # Minimum duration between two polling HTTP GETs in a loop
  # (to prevent the loop running hot in case of an error)
  delay-between-polling-gets = 1s
}

jobscheduler.webserver {
  # When returning HTTP status 500 "Internal Server Error"
  # respond with the full Throwable message including causing Throwables.
  # May exhibit internals.
  verbose-error-messages = on

  shutdown-timeout = 10s

  auth {
    realm = "JobScheduler Master"
    invalid-authentication-delay = 1s

    # Warning: loopback-is-pubic = on would open the JobScheduler
    # for everyone with access to a loopback interface (127.0.0.1)
    # This may be your local reverse proxy which routes requests
    # from the world to the JobScheduler.
    loopback-is-public = off

    # Warning: get-is-public = on would allow everyone doing HTTP GET.
    # That means read access would be allowed for everyone.
    get-is-public = off

    # Warning: public = on would allow everyone
    # doing nearly everything with the JobScheduler.
    # Do not do that!
    public = off
  }

  log {
    level = Debug
    error-level = Debug
    500-level = Warn
    response = on
  }

  services {
    event {
      streaming {
        chunk-timeout = 24h
        delay = 20ms
      }
    }

    log {
      poll-interval = 100ms
    }
  }

  test = off
}

jobscheduler.journal {
  # For every committed record written to journal, sync data with disk, i.e. force write to disk. Safe but maybe slow.
  sync = off

  # For testing of timing behavior of a slow magnetic disk: Don't sync, but sleep
  #simulate-sync = 20ms

  # Delay before sync only, for more commits per sync
  sync-delay = 50ms

  # Delay sync or flush, for more commits per sync/flush
  delay = 0ms

  # Limit the number of event the Master buffers.
  # OrderStdWritten may be up to 10000 characters (30000 UTF-8 characters),
  # so for 1000 events, memory usage can reach 30MB.
  # (1 for AgentEventIdEvent is added to the number)
  event-buffer-size = 999

  # Additional slow consistency test:
  slow-check-journaled-state = false

  # Duration of event writing after which a new journal file is to be written
  snapshot.period = 1hour

  # Approximate maximum journal file size
  snapshot.when-bigger-than = 1GB

  snapshot.log-period = 30s
  snapshot.log-actor-limit = 10

  watch.keep-open = 100
  watch.index-size = 10000

  # JournalIndex holds one position for index-factor * (historic events or current commits of events)
  watch.index-factor = 100

  ack-warn-duration = 5s

  dispatcher {
    type = PinnedDispatcher
    executor = "thread-pool-executor"
  }

  # ReleaseEvents deletes unused journal files. This can be suppressed.
  remove-obsolete-files = true

  # UserIDs of user allowed to send MasterCommand.ReleaseEvents.
  # JobScheduler keeps track of latest ReleaseEvents command of each user and
  # deletes obsolete events (journal files).
  users-allowed-to-release-events = []
}

jobscheduler.master.cluster {
  node.is-backup = no

  watches = []

  heartbeat = 3s

  # The setting akka.http.client.connecting-timeout delays the failover if longer than this setting.
  fail-after = 10s
  #when-deactivated-restart-jvm = on
}

jobscheduler.termination {
  shutdown-hook-timeout = 10s
}

jobscheduler.thread-pools.standard {
  # Number of threads.
  # parallelism = 8 means 8 threads
  # parallelism = 1.5x means one and a half thread per processor (Java's availableProcessors), rounded up
  parallelism = 1x

  # Maximum number of threads, including blocking IO threads
  maximum = 1000
}

jobscheduler.akka {
  use-jobscheduler-thread-pool = on
  shutdown-timeout = 10s
  ask-timeout = 1 minute
  actor-message-log-level = None
}

jobscheduler.monix.tailrecm-limit = 1000

akka {
  # This configuration is for Akka.
  # Descriptions are borrowed from https://doc.akka.io/docs/akka/2.5.13/general/configuration.html#configuration

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = DEBUG
  stdout-loglevel = off
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s
  log-dead-letters = off

  scheduler.tick-duration = 200ms   # With default (10ms under Windows), we have 1% CPU usage when idling

  # We have our own shutdown hook
  coordinated-shutdown.run-by-jvm-shutdown-hook = off

  # The guardian "/user" will use this class to obtain its supervisorStrategy.
  # It needs to be a subclass of akka.actor.SupervisorStrategyConfigurator.
  # In addition to the default there is akka.actor.StoppingSupervisorStrategy.
  actor.guardian-supervisor-strategy = akka.actor.StoppingSupervisorStrategy

  actor.default-dispatcher.fork-join-executor {
    parallelism-min = 1
    parallelism-factor = 1
  }
}

akka.http {
  parsing.max-uri-length = 8000   # As recommended in https://tools.ietf.org/html/rfc7230#section-3.1.1

  # This configuration is for the Akka HTTP web server and client.
  # Descriptions are borrowed from https://doc.akka.io/docs/akka-http/10.1.3/configuration.html?language=scala

  server {
    # The time after which an idle connection will be automatically closed.
    # Set to `infinite` to completely disable idle connection timeouts.
    # Default: idle-timeout = 60 s
    #??? idle-timeout = 3610s

    # Defines the default time period within which the application has to
    # produce an HttpResponse for any given HttpRequest it received.
    # The timeout begins to run when the *end* of the request has been
    # received, so even potentially long uploads can have a short timeout.
    # Set to `infinite` to completely disable request timeout checking.
    #
    # Make sure this timeout is smaller than the idle-timeout, otherwise,
    # the idle-timeout will kick in first and reset the TCP connection
    # without a response.
    #
    # If this setting is not `infinite` the HTTP server layer attaches a
    # `Timeout-Access` header to the request, which enables programmatic
    # customization of the timeout period and timeout response for each
    # request individually.
    # Default: request-timeout = 20 s
    request-timeout = 1h

    # Enables/disables the returning of more detailed error messages to
    # the client in the error response.
    # Should be disabled for browser-facing APIs due to the risk of XSS attacks
    # and (probably) enabled for internal or non-browser APIs.
    # Note that akka-http will always produce log messages containing the full
    # error details.
    # Default: verbose-error-messages = off
    verbose-error-messages = on
  }

  host-connection-pool {
    # The time after which an idle connection pool (without pending requests)
    # will automatically terminate itself. Set to `infinite` to completely disable idle timeouts.
    # Default: idle-timeout = 30 s
    idle-timeout = infinite

    # The minimum duration to backoff new connection attempts after the previous connection attempt failed.
    # Default: base-connection-backoff = 100ms
    # Unavoidable warning: akka.http.impl.engine.client.PoolGateway - Connection attempt failed. Backing off new connection attempts for at least ...
    base-connection-backoff = 1s

    # Maximum backoff duration between failed connection attempts. For more information see the above comment for the
    # `base-connection-backoff` setting.
    # Default: max-connection-backoff = 2 min
    max-connection-backoff = 1s

    # The maximum number of times failed requests are attempted again,
    # (if the request can be safely retried) before giving up and returning an error.
    # Set to zero to completely disable request retries.
    # Default: max-retries = 5
    max-retries = 0

    # The "new" pool implementation will fail a connection early and clear the slot if a response entity was not
    # subscribed during the given time period after the response was dispatched. In busy systems the timeout might be
    # too tight if a response is not picked up quick enough after it was dispatched by the pool.
    # Default: response-entity-subscription-timeout = 1s
    response-entity-subscription-timeout = 10s
  }

  client {
    # The time period within which the TCP connecting process must be completed.
    # Default: connecting-timeout = 10s
    connecting-timeout = 10s

    # The time after which an idle connection will be automatically closed.
    # Set to `infinite` to completely disable idle timeouts.
    # Default: idle-timeout = 60s
  }
}
