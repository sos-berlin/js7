package js7.base.data

import java.io.OutputStream
import scala.language.implicitConversions

trait Writable[A]:
  def writeToStream(a: A, out: OutputStream): Unit


object Writable:
  // Looks like generated by Simulacrum

  def apply[A](implicit instance: Writable[A]): Writable[A] =
    instance

  trait Ops[A]:
    def typeClassInstance: Writable[A]
    def self: A

    final def writeToStream(out: OutputStream): Unit =
      typeClassInstance.writeToStream(self, out)

  trait ToWritableOps:
    implicit def toWritableOps[A](target: A)(implicit tc: Writable[A]): Ops[A] =
      new Ops[A]:
        val self = target
        val typeClassInstance = tc

  object nonInheritedOps extends ToWritableOps

  trait AllOps[A] extends Ops[A]:
    def typeClassInstance: Writable[A]

  object ops:
    implicit def toAllWritableOps[A](target: A)(implicit tc: Writable[A]): AllOps[A] =
      new AllOps[A]:
        val self = target
        val typeClassInstance = tc
