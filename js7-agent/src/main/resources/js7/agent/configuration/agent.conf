js7.job {
  execution {
    # kill.script = "/path/to/kill-script"

    signed-script-injection-allowed = no

    # Still unused:
    java.options = []

    sigkill-after = 60s
  }

  internal {
    # Don't touch!
    TaskRegisterActor.mailbox.mailbox-type = "js7.agent.task.TaskRegisterActorMailbox"
  }
}

js7.order {
  stdout-stderr {
    # Maximum numbers of characters in OrderStdoutWritten and OrderStderrWritten events.
    chunk-size = 10000

    # Buffer for reading characters from stdout and stderr
    # (Java memory usage is four times this value (2 bytes per character, stdout and stderr)
    char-buffer-size = 4000

    # Delay and collect stdout and stderr in one chunk (one event) not longer than this duration.
    delay = 0.4s

    # After no stdout or stderr output for this duration, do not delay next OrderStdoutWritten or OrderStderrWritten.
    no-delay-after = 9999days  # never

    # Longer journal commit delay gives better journal throughput,
    # shorter delay gives shorter event latency.
    commit-delay = 0.1s
  }
}

js7.web.server {
  auth.realm = "JS7 JobScheduler Agent Server"
}

js7.thread-pools {
  io {
    keep-alive = 1 minutes
    minimum = 0
    maximum = unlimited
  }
}

akka {
  # This configuration is for Akka.
  # Descriptions are borrowed from https://doc.akka.io/docs/akka/2.5.13/general/configuration.html#configuration

  # We have our own shutdown hook
  coordinated-shutdown.run-by-jvm-shutdown-hook = off

  # The guardian "/user" will use this class to obtain its supervisorStrategy.
  # It needs to be a subclass of akka.actor.SupervisorStrategyConfigurator.
  # In addition to the default there is akka.actor.StoppingSupervisorStrategy.
  actor.guardian-supervisor-strategy = akka.actor.StoppingSupervisorStrategy
}
