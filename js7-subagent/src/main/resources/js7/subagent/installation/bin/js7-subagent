#!/usr/bin/env bash
set -euo pipefail

JS7_HOME="$(cd "${0%/*}/../bin/.." && pwd)"
export JS7_HOME
. "$JS7_HOME/bin/internal/set-context.sh"
declare classpathString java  # returned by set-context.sh
declare -a standardJavaOptions

config=/var/opt/js7/agent/config
data=/var/opt/js7/agent/data
httpPort=127.0.0.1:4444
httpsPort=4443
agentOptions=()
javaOptions=()
terminateCommand='{ "TYPE": "ShutDown", "processSignal": "SIGKILL" }'
execOptions=()

for arg in "$@"; do :
  case "$arg" in
    --arg0=*)
      a="${arg#*=}"
      execOptions=("-a" "${arg#*=}")
      ;;
    --rmx-port=*)
      a="${arg#*=}"
      javaOptions+=(
        "-Dcom.sun.management.jmxremote"
        "-Dcom.sun.management.jmxremote.ssl=false"
        "-Dcom.sun.management.jmxremote.authenticate=false"
        "-Dcom.sun.management.jmxremote.port=$a")
      ;;
    --debug-port=*)
      a="${arg#*=}"
      javaOptions+=("-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=$a")
      ;;
    --java-option=*)
      a="${arg#*=}"
      javaOptions+=("$a")
      ;;
    -J*)
      a="${arg#-J}"
      javaOptions+=("$a")
      ;;
    --directory=*)
      config="${arg#*=}"/config
      data="${arg#*=}"/data
      ;;
    --config-directory=*)
      config="${arg#*=}"
      ;;
    --data-directory=*)
      data="${arg#*=}"
      ;;
    --http-port=*)
      httpPort="${arg#*=}"
      ;;
    --https-port=*)
      httpsPort="${arg#*=}"
      ;;
    *)
      agentOptions+=("$arg")
      ;;
  esac
done

if [ ! -d "$config" ]; then :
  echo "No such directory: --config-directory=$config"
  exit 1
fi
config="$(toSystemPath "$config")"

if [ ! -d "$data" ]; then :
  echo "No such directory: --data-directory=$data"
  exit 1
fi
data="$(toSystemPath "$data")"

logs="$data/logs"
[ -d "$logs" ] || mkdir "$logs"

stateDir="$data/state"
[ -d "$stateDir" ] || mkdir "$stateDir"

workDir="$data/work"
[ -d "$workDir" ] || mkdir "$workDir"

# Copy stdout and stderr to stdouterr.log
if [ -e "$logs/stdouterr.log" ]; then
  echo >>"$logs/stdouterr.log" \
    -e "\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
fi
exec &> >(exec tee -a "$logs"/stdouterr.log)

#ln -sf "$logs"/agent.log "$HOME"/js7.log
#ln -sf "$logs"/agent-debug.log "$HOME"/js7-debug.log

logJavaOptions=("-Djs7.log4j.directory=$logs")  # Used in logging configuration
stderrLogJavaOptions=("-Djs7.log4j.directory=$logs")  # Used in logging configuration
if [ -f "$config/log4j2.xml" ]; then :
  logJavaOptions+=("-Dlog4j2.configurationFile=classpath:js7/log4j2.xml,$config/log4j2.xml")
  stderrLogJavaOptions+=("-Dlog4j2.configurationFile=classpath:js7/log4j2.xml,classpath:js7/log4j2-stderr.xml,$config/log4j2.xml")
fi

agentOptions+=("--config-directory=$config")
agentOptions+=("--data-directory=$data")
[ -z "$httpPort" ] || agentOptions+=("--http-port=$httpPort")
[ -z "$httpsPort" ] || agentOptions+=("--https-port=$httpsPort")

while true; do
  loopJavaOptions=()

  [ -d "$data/cache" ] || mkdir "$data/cache"
  if [[ "$JAVA_VERSION_MAJOR" -ge 19 ]]; then
    loopJavaOptions+=("-XX:SharedArchiveFile=$data/cache/js7.jsa" -XX:+AutoCreateSharedArchive)
  fi

  execute=(
    "$java"
    "${javaOptions[@]}"
    "${logJavaOptions[@]}"
    "${loopJavaOptions[@]}"
    "${standardJavaOptions[@]}"
    -classpath "$classpathString"
    js7.agent.main.AgentMain
    "${agentOptions[@]}")

  log "${execute[@]}"
  exec "${execOptions[@]}" "${execute[@]}" &

  pid=$!
  log "PID $pid"

  terminate() {
    echo "⚡️ $1"
    log "$1: ShutDown JS7 Subagent"

    if [ "$SHELL" = "/bin/bash" ]; then
      "$JS7_HOME"/bin/js7-client --data-directory="$data" "$terminateCommand" &
    else
      "$java" -Xmx50m \
        "${logJavaOptions[@]}" \
        "${standardJavaOptions[@]}" \
        -classpath "$classpathString" \
        js7.agent.client.main.SubagentClientMain \
        --data-directory="$data" \
        "$terminateCommand" \
        >/dev/null &
    fi

    wait $pid
    returnCode=$?
  }

  returnCode=""
  trap "terminate SIGTERM" SIGTERM
  trap "terminate SIGINT" SIGINT
  if wait $pid; then
    returnCode=${returnCode:-$?}
  else
    returnCode=${returnCode:-$?}
  fi
  trap - SIGTERM SIGINT

  if [[ $returnCode -eq 0 ]] || [[ $returnCode -eq 97 ]]; then
    log "JS7 Subagent has been shut down"
  else
    log "JS7 Subagent exited with exit code $returnCode"
  fi

  # Call CrashPidFileKiller only if Engine could lock $data/state/lock
  if [[ $(cat "$data/state/lock" 2>/dev/null || true) -eq $pid ]] && [[ -s "$data/work/crashpidfile" ]]; then
    ps fux || true

    "$java" -Xmx100m \
      "${standardJavaOptions[@]}" \
      "${stderrLogJavaOptions[@]}" \
      -classpath "$classpathString" \
      js7.launcher.crashpidfile.CrashPidFileKiller \
      --data-directory="$data" || true

    ps fux || true
  fi

  if [[ $returnCode -eq 0 ]] || [[ $returnCode -ge 97 ]] && [[ $returnCode -le 99 ]]; then
    log "Clear $workDir"
    find "$workDir" -mindepth 1 -delete ! -type d -printf "Removed %p\n"
  fi

  # For testing, we restart after SIGKILL, too
  if [[ $returnCode -eq 137 ]] || [[ $returnCode -eq 97 ]] || [[ $returnCode -eq 98 ]]; then
    log "Starting again"
  else
    exit $returnCode
  fi
done
