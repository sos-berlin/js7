akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = DEBUG
  stdout-loglevel = off
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = 0
  scheduler.tick-duration = 200ms   # With default (10ms under Windows), we have 1% CPU usage when idling

  # The guardian "/user" will use this class to obtain its supervisorStrategy.
  # It needs to be a subclass of akka.actor.SupervisorStrategyConfigurator.
  # In addition to the default there is akka.actor.StoppingSupervisorStrategy.
  actor.guardian-supervisor-strategy = akka.actor.StoppingSupervisorStrategy

  http {
    host-connection-pool {
      # The maximum number of times failed requests are attempted again,
      # (if the request can be safely retried) before giving up and returning an error.
      # Set to zero to completely disable request retries.
      max-retries = 0

      # The "new" pool implementation will fail a connection early and clear the slot if a response entity was not
      # subscribed during the given time period after the response was dispatched. In busy systems the timeout might be
      # too tight if a response is not picked up quick enough after it was dispatched by the pool.
      # Default: response-entity-subscription-timeout = 1s
      response-entity-subscription-timeout = 10s
    }
  }
}
