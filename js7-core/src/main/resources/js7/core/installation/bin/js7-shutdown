#!/usr/bin/env bash
set -euo pipefail

data="."

function usage() {
  echo "Usage: $0 --data-directory=DATA --restart"
}

jsonFields='"TYPE": "ShutDown"'
for arg in "$@"; do :
  case "$arg" in
    --data-directory=*)
      data="${arg#*=}"
      ;;
    --restart)
      jsonFields+=', "restart": true'
      ;;
    --suppress-snapshot=*)
      jsonFields+=', "suppressSnapshot": true'
      ;;
    --SIGTERM)
      # Only Director and Subagent
      jsonFields+=', "processSignal": "SIGTERM"'
      ;;
    --SIGKILL)
      # Only Director and Subagent
      jsonFields+=', "processSignal": "SIGKILL"'
      ;;
    --dontWaitForDirector)
      # Only Director and Subagent
      jsonFields+=', "dontWaitForDirector": "true"'
      ;;
    -\?|-h|--help)
      usage
      exit 0
      ;;
    *)
      echo "Invalid option: $arg"
      usage
      exit 1
      ;;
  esac
done

exec /opt/js7/bin/js7-client --data-directory="$data" "{ $jsonFields }" || {
  # Fallback, send a SIGTERM signal. THIS MAY KILL THE USER'S PROCESSES.
  # This may be not applicable for each user.
  if [[ -f "$data/state/lock" ]]; then
    pid=$(cat "$data/state/lock")
    echo "kill $pid"
    kill $pid
  fi
}
