#!/usr/bin/env bash
set -e

# JS7 Provider starter

JS7_HOME="$(cd "${0%/*}/../bin/.." && pwd)"
export JS7_HOME
. "$JS7_HOME/bin/internal/set-context.sh"
declare classpathString java  # returned by set-context.sh

config=/var/opt/js7/provider/config
data=/var/opt/js7/provider/data
providerOptions=()
javaOptions=(-XX:+UseStringDeduplication)
log4jAsync=false

for arg in "$@"; do :
  case "$arg" in
    -rmx-port=*)
      a="${arg#*=}"
      javaOptions+=(
        "-Dcom.sun.management.jmxremote"
        "-Dcom.sun.management.jmxremote.ssl=false"
        "-Dcom.sun.management.jmxremote.authenticate=false"
        "-Dcom.sun.management.jmxremote.port=$a")
      shift
      ;;
    -debug-port=*)
      a="${arg#*=}"
      javaOptions+=("-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=$a")
      shift
      ;;
    -java-option=*)
      a="${arg#*=}"
      javaOptions+=("$a")
      shift
      ;;
    -J*)
      a="${arg#-J}"
      javaOptions+=("$a")
      shift
      ;;
    -directory=*)
      config="${arg#*=}"/config
      data="${arg#*=}"/data
      shift
      ;;
    -config-directory=*)
      config="${arg#*=}"
      shift
      ;;
    -data-directory=*)
      data="${arg#*=}"
      shift
      ;;
    -log4j-async)
      log4jAsync=true
      shift
      ;;
    *)
      providerOptions+=("$arg")
      shift
      ;;
  esac
done

if [ ! -d "$config" ]; then :
  echo "No such directory: -config-directory=$config"
  exit 1
fi
config="$(toSystemPath "$config")"

if [ ! -d "$data" ]; then :
  echo "No such directory: -data-directory=$data"
  exit 1
fi
data="$(toSystemPath "$data")"

logs="$data/logs"
[ -d "$logs" ] || mkdir "$logs"

stateDir="$data/state"
[ -d "$stateDir" ] || mkdir "$stateDir"

echo -e "\n-------\n$(date --iso-8601=ns)" >>"$logs/stdouterr.log"
exec > >(tee -a "$logs"/stdouterr.log) 2>&1  # Redirects stderr to stdout as a side effect
javaOptions+=("-Djs7.log4j.directory=$logs")  # Used in logging configuration
if [ -f "$config/log4j2.xml" ]; then :
  javaOptions+=("-Dlog4j.configurationFile=$config/log4j2.xml")
fi
if $log4jAsync; then :
  javaOptions+=("-Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector")
  javaOptions+=("-Dlog4j2.asyncLoggerWaitStrategy=Block")  # Uses less CPU when idling than default "Timeout"
  javaOptions+=("-Djs7.log4j.immediateFlush=false")
fi

providerOptions+=("-config-directory=$config")
#normalizedData="$(toSystemPath "$data")"
#providerOptions+=("-data-directory=$normalizedData")

live="$config/live"
if [ ! -d "$live" ]; then :
  echo "Missing directory $live"
  exit 1
fi

execute=(
  "$java"
  "${javaOptions[@]}"
  -classpath "$classpathString"
  js7.provider.ProviderMain
  "${providerOptions[@]}")
echo "${execute[@]}"

"${execute[@]}" &

pid=$!
pidFile="$stateDir/pid"
echo "$pid" >"$pidFile"
echo PID $pid

terminate() {
  echo
  echo ShutDown JS7 Provider
  kill $pid
}

trap terminate SIGTERM SIGINT
wait $pid || echo "JS7 Provider exited with exit code $?"
rm "$pidFile"
trap - SIGTERM SIGINT

echo -e "\n$(date --iso-8601=ns) JS7 Provider has been shut down" >>"$logs/stdouterr.log"
